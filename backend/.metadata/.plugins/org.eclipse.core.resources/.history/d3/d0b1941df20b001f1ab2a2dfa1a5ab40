package com.tokio.agenda.services;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.*;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

import com.tokio.agenda.DTO.TransferenciaDTO;
import com.tokio.agenda.entities.Transferencia;
import com.tokio.agenda.repositories.TransferenciaRepository;
import com.tokio.agenda.services.exceptions.DiasException;
import com.tokio.agenda.services.exceptions.TaxaZeroException;

@SpringBootTest
public class TransferenciaServiceTests {

    @Mock
    private TransferenciaRepository repository;

    @InjectMocks
    private TransferenciaService service;

    @Test
    public void saveShouldThrowTaxaZeroExceptionWhenTaxaIsZero() {
        TransferenciaDTO transferenciaDTO = new TransferenciaDTO();
        
        transferenciaDTO.setDataTransferencia(LocalDate.of(2024, 5, 6));
        transferenciaDTO.setValor(BigDecimal.valueOf(10.00));
        transferenciaDTO.setTaxa(BigDecimal.ZERO);

        assertThrows(TaxaZeroException.class, () -> {
            service.save(transferenciaDTO);
        });

        verify(repository, never()).save(any(Transferencia.class));
    }


   
 
    @Test
    public void testCalcularTaxaDiasExcedidos() {
        LocalDate dataTransferencia = LocalDate.now().plusDays(51);
        BigDecimal valorTransferencia = BigDecimal.valueOf(1000);

        assertThrows(DiasException.class, () -> {
            service.calcularTaxa(dataTransferencia, valorTransferencia);
        });
    }    
    
    
}

